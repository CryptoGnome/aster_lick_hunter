[pytest]
# Pytest configuration

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Markers for categorizing tests
markers =
    unit: Unit tests - fast, isolated
    integration: Integration tests - may use database
    api: API endpoint tests
    e2e: End-to-end tests - full workflow
    performance: Performance and load tests
    slow: Slow running tests
    critical: Critical functionality tests

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings

# Coverage options (when run with --cov)
# pytest --cov=src --cov-report=html --cov-report=term
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Logging
log_cli = false
log_cli_level = ERROR
log_file = tests.log
log_file_level = DEBUG